import React, { useState } from 'react';
import { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, PieChart, Pie, Cell } from 'recharts';

const InteractiveGradeCategorization = () => {
  const [selectedGrade, setSelectedGrade] = useState('all');
  const [selectedCategory, setSelectedCategory] = useState('all');

  // Complete subject data organized by grades
  const subjectsByGrade = {
    'O': {
      grade: 'Outstanding',
      points: 10,
      color: '#10B981',
      count: 17,
      subjects: [
        { name: 'Physics I Laboratory (Gr A)', semester: 1, category: 'Laboratory' },
        { name: 'Basic Electrical Engineering Laboratory', semester: 1, category: 'Laboratory' },
        { name: 'Workshop/Manufacturing Practices(Gr A)', semester: 1, category: 'Laboratory' },
        { name: 'Basic Electrical Engineering', semester: 1, category: 'Theory' },
        { name: 'Programming for Problem Solving Laboratory', semester: 2, category: 'Laboratory' },
        { name: 'Engineering Graphics & Design(Gr-A)', semester: 2, category: 'Laboratory' },
        { name: 'Language Laboratory', semester: 2, category: 'Laboratory' },
        { name: 'Programming for Problem Solving', semester: 2, category: 'Theory' },
        { name: 'Analog and Digital Electronics Lab', semester: 3, category: 'Laboratory' },
        { name: 'Data Structure & Algorithms Lab', semester: 3, category: 'Laboratory' },
        { name: 'Design & Analysis of Algorithms Lab', semester: 4, category: 'Laboratory' },
        { name: 'Biology', semester: 4, category: 'Theory' },
        { name: 'Software Engineering', semester: 5, category: 'Theory' },
        { name: 'Software Engineering Lab', semester: 5, category: 'Laboratory' },
        { name: 'Operating Systems Lab', semester: 5, category: 'Laboratory' },
        { name: 'Object Oriented Programming Lab', semester: 5, category: 'Laboratory' },
        { name: 'Database Management Systems Lab', semester: 6, category: 'Laboratory' },
        { name: 'Computer Networks Lab', semester: 6, category: 'Laboratory' },
        { name: 'Project-II', semester: 7, category: 'Project' },
        { name: 'Project-III', semester: 8, category: 'Project' }
      ]
    },
    'E': {
      grade: 'Excellent',
      points: 9,
      color: '#3B82F6',
      count: 20,
      subjects: [
        { name: 'Physics I (Gr A)', semester: 1, category: 'Science' },
        { name: 'Mathematics I', semester: 1, category: 'Mathematics' },
        { name: 'Chemistry-I (Gr-A)', semester: 2, category: 'Science' },
        { name: 'Mathematics - IIA', semester: 2, category: 'Mathematics' },
        { name: 'English', semester: 2, category: 'Humanities' },
        { name: 'Chemistry-I Laboratory (Gr-A)', semester: 2, category: 'Laboratory' },
        { name: 'Data Structure & Algorithms', semester: 3, category: 'CS Core' },
        { name: 'Economics for Engineers (Humanities-II)', semester: 3, category: 'Humanities' },
        { name: 'IT Workshop (Sci Lab/MATLAB/Python/R)', semester: 3, category: 'Laboratory' },
        { name: 'Computer Organisation Lab', semester: 3, category: 'Laboratory' },
        { name: 'Environmental Sciences', semester: 4, category: 'Science' },
        { name: 'Computer Architecture Lab', semester: 4, category: 'Laboratory' },
        { name: 'Object Oriented Programming', semester: 5, category: 'CS Core' },
        { name: 'Introduction to Industrial Management (Humanities III)', semester: 5, category: 'Humanities' },
        { name: 'Theory of Computation', semester: 5, category: 'CS Core' },
        { name: 'Constitution of India/ Essence of Indian Knowledge Tradition', semester: 5, category: 'Humanities' },
        { name: 'Computer Networks', semester: 6, category: 'CS Core' },
        { name: 'Research Methodology', semester: 6, category: 'Research' },
        { name: 'Machine learning', semester: 7, category: 'Advanced CS' },
        { name: 'Project Management and Entrepreneurship', semester: 7, category: 'Humanities' },
        { name: 'Mobile Computing', semester: 8, category: 'Advanced CS' },
        { name: 'E-Commerce and ERP', semester: 8, category: 'Advanced CS' }
      ]
    },
    'A': {
      grade: 'Very Good',
      points: 8,
      color: '#8B5CF6',
      count: 10,
      subjects: [
        { name: 'Computer Organisation', semester: 3, category: 'CS Core' },
        { name: 'Design & Analysis of Algorithms', semester: 4, category: 'CS Core' },
        { name: 'Compiler Design', semester: 5, category: 'CS Core' },
        { name: 'Operating Systems', semester: 5, category: 'CS Core' },
        { name: 'Database Management Systems', semester: 6, category: 'CS Core' },
        { name: 'Image Processing', semester: 6, category: 'Advanced CS' },
        { name: 'Data Warehousing and Data Mining', semester: 6, category: 'Advanced CS' },
        { name: 'Numerical Methods', semester: 6, category: 'Mathematics' },
        { name: 'Cyber Security', semester: 7, category: 'Advanced CS' },
        { name: 'Web and Internet Technology', semester: 8, category: 'Advanced CS' }
      ]
    },
    'B': {
      grade: 'Good',
      points: 7,
      color: '#F59E0B',
      count: 5,
      subjects: [
        { name: 'Analog and Digital Electronics', semester: 3, category: 'Electronics' },
        { name: 'Mathematics-III (Differential Calculus)', semester: 3, category: 'Mathematics' },
        { name: 'Computer Architecture', semester: 4, category: 'CS Core' },
        { name: 'Formal Language & Automata Theory', semester: 4, category: 'CS Core' },
        { name: 'Multimedia Systems', semester: 7, category: 'Advanced CS' }
      ]
    },
    'C': {
      grade: 'Fair',
      points: 6,
      color: '#EF4444',
      count: 1,
      subjects: [
        { name: 'Discrete Mathematics', semester: 4, category: 'Mathematics' }
      ]
    }
  };

  // Data for charts
  const gradeData = Object.entries(subjectsByGrade).map(([key, value]) => ({
    grade: key,
    count: value.count,
    percentage: ((value.count / 53) * 100).toFixed(1),
    color: value.color,
    gradeName: value.grade
  }));

  // Category analysis
  const categories = {
    'Laboratory': { count: 0, total: 0, color: '#10B981' },
    'CS Core': { count: 0, total: 0, color: '#3B82F6' },
    'Advanced CS': { count: 0, total: 0, color: '#8B5CF6' },
    'Mathematics': { count: 0, total: 0, color: '#EF4444' },
    'Science': { count: 0, total: 0, color: '#F59E0B' },
    'Humanities': { count: 0, total: 0, color: '#06B6D4' },
    'Theory': { count: 0, total: 0, color: '#84CC16' },
    'Project': { count: 0, total: 0, color: '#F97316' },
    'Electronics': { count: 0, total: 0, color: '#EC4899' },
    'Research': { count: 0, total: 0, color: '#6366F1' }
  };

  // Calculate category statistics
  Object.values(subjectsByGrade).forEach(gradeData => {
    gradeData.subjects.forEach(subject => {
      if (categories[subject.category]) {
        categories[subject.category].total++;
        if (gradeData.points >= 9) {
          categories[subject.category].count++;
        }
      }
    });
  });

  const categoryData = Object.entries(categories)
    .filter(([key, value]) => value.total > 0)
    .map(([key, value]) => ({
      category: key,
      excellent: value.count,
      total: value.total,
      percentage: ((value.count / value.total) * 100).toFixed(1),
      color: value.color
    }));

  const getFilteredSubjects = () => {
    let subjects = [];
    
    if (selectedGrade === 'all') {
      Object.values(subjectsByGrade).forEach(gradeData => {
        subjects.push(...gradeData.subjects.map(subject => ({
          ...subject,
          grade: gradeData.grade,
          points: gradeData.points,
          color: gradeData.color
        })));
      });
    } else {
      subjects = subjectsByGrade[selectedGrade].subjects.map(subject => ({
        ...subject,
        grade: subjectsByGrade[selectedGrade].grade,
        points: subjectsByGrade[selectedGrade].points,
        color: subjectsByGrade[selectedGrade].color
      }));
    }

    if (selectedCategory !== 'all') {
      subjects = subjects.filter(subject => subject.category === selectedCategory);
    }

    return subjects.sort((a, b) => a.semester - b.semester);
  };

  const filteredSubjects = getFilteredSubjects();

  return (
    <div className="w-full max-w-7xl mx-auto p-6 bg-gray-50">
      <div className="bg-white rounded-lg shadow-lg p-6">
        <h1 className="text-3xl font-bold text-center text-gray-800 mb-8">
          Interactive Grade-wise Subject Analysis
        </h1>
        <p className="text-center text-gray-600 mb-8">
          All 53 subjects from 8 semesters | Final CGPA: <span className="font-bold text-blue-600">8.89</span>
        </p>

        {/* Grade Distribution Pie Chart */}
        <div className="mb-12">
          <h2 className="text-2xl font-semibold text-gray-700 mb-6 text-center">
            Grade Distribution Overview
          </h2>
          <div className="flex flex-col lg:flex-row items-center justify-center gap-8">
            <div className="w-full lg:w-1/2">
              <ResponsiveContainer width="100%" height={350}>
                <PieChart>
                  <Pie
                    data={gradeData}
                    cx="50%"
                    cy="50%"
                    labelLine={false}
                    label={({ grade, count, percentage }) => 
                      `${grade}: ${count} (${percentage}%)`
                    }
                    outerRadius={120}
                    fill="#8884d8"
                    dataKey="count"
                  >
                    {gradeData.map((entry, index) => (
                      <Cell key={`cell-${index}`} fill={entry.color} />
                    ))}
                  </Pie>
                  <Tooltip />
                </PieChart>
              </ResponsiveContainer>
            </div>
            
            <div className="w-full lg:w-1/2">
              <div className="space-y-3">
                {gradeData.map((grade, index) => (
                  <div 
                    key={index} 
                    className={`p-4 rounded-lg border-2 cursor-pointer transition-all ${
                      selectedGrade === grade.grade ? 'border-blue-500 bg-blue-50' : 'border-gray-200 bg-white hover:border-gray-300'
                    }`}
                    onClick={() => setSelectedGrade(selectedGrade === grade.grade ? 'all' : grade.grade)}
                  >
                    <div className="flex items-center justify-between">
                      <div className="flex items-center">
                        <div 
                          className="w-6 h-6 rounded-full mr-3"
                          style={{ backgroundColor: grade.color }}
                        ></div>
                        <div>
                          <span className="font-bold text-lg">{grade.grade}</span>
                          <span className="text-sm text-gray-500 ml-2">({grade.gradeName})</span>
                        </div>
                      </div>
                      <div className="text-right">
                        <span className="font-bold text-xl">{grade.count}</span>
                        <span className="text-sm text-gray-500 ml-1">({grade.percentage}%)</span>
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </div>
        </div>

        {/* Category Performance */}
        <div className="mb-8">
          <h2 className="text-2xl font-semibold text-gray-700 mb-6 text-center">
            Performance by Subject Category
          </h2>
          <ResponsiveContainer width="100%" height={350}>
            <BarChart data={categoryData} margin={{ top: 20, right: 30, left: 20, bottom: 60 }}>
              <CartesianGrid strokeDasharray="3 3" />
              <XAxis 
                dataKey="category" 
                angle={-45}
                textAnchor="end"
                height={80}
                interval={0}
              />
              <YAxis />
              <Tooltip 
                formatter={(value, name) => [value, name === 'excellent' ? 'Excellent+ Grades' : 'Total Subjects']}
              />
              <Legend />
              <Bar dataKey="total" fill="#E5E7EB" name="Total Subjects" />
              <Bar dataKey="excellent" fill="#3B82F6" name="Excellent+ Grades" />
            </BarChart>
          </ResponsiveContainer>
        </div>

        {/* Filters */}
        <div className="mb-8">
          <div className="flex flex-wrap gap-4 justify-center">
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">Filter by Grade:</label>
              <select 
                value={selectedGrade} 
                onChange={(e) => setSelectedGrade(e.target.value)}
                className="px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              >
                <option value="all">All Grades</option>
                {Object.entries(subjectsByGrade).map(([key, value]) => (
                  <option key={key} value={key}>{key} - {value.grade}</option>
                ))}
              </select>
            </div>
            
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">Filter by Category:</label>
              <select 
                value={selectedCategory} 
                onChange={(e) => setSelectedCategory(e.target.value)}
                className="px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              >
                <option value="all">All Categories</option>
                {Object.keys(categories).map(category => (
                  <option key={category} value={category}>{category}</option>
                ))}
              </select>
            </div>
          </div>
        </div>

        {/* Subject List */}
        <div className="mb-8">
          <h2 className="text-2xl font-semibold text-gray-700 mb-6 text-center">
            Subject Details 
            {selectedGrade !== 'all' && ` - ${subjectsByGrade[selectedGrade].grade} Grades`}
            {selectedCategory !== 'all' && ` - ${selectedCategory} Category`}
            <span className="text-sm text-gray-500 ml-2">({filteredSubjects.length} subjects)</span>
          </h2>
          
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
            {filteredSubjects.map((subject, index) => (
              <div 
                key={index}
                className="p-4 rounded-lg border shadow-sm hover:shadow-md transition-shadow"
                style={{ borderLeftColor: subject.color, borderLeftWidth: '4px' }}
              >
                <div className="flex justify-between items-start mb-2">
                  <span 
                    className="inline-block px-2 py-1 rounded text-white text-xs font-bold"
                    style={{ backgroundColor: subject.color }}
                  >
                    Grade: {selectedGrade === 'all' ? Object.keys(subjectsByGrade).find(key => subjectsByGrade[key].points === subject.points) : selectedGrade}
                  </span>
                  <span className="text-xs text-gray-500">Sem {subject.semester}</span>
                </div>
                <h3 className="font-semibold text-sm text-gray-800 mb-2 leading-tight">
                  {subject.name}
                </h3>
                <div className="flex justify-between items-center">
                  <span className="text-xs px-2 py-1 bg-gray-100 rounded text-gray-600">
                    {subject.category}
                  </span>
                  <span className="text-xs font-bold text-gray-700">
                    {subject.points}/10
                  </span>
                </div>
              </div>
            ))}
          </div>
        </div>

        {/* Summary Statistics */}
        <div className="grid grid-cols-1 md:grid-cols-4 gap-6">
          <div className="bg-green-50 p-6 rounded-lg border-l-4 border-green-400">
            <h3 className="font-bold text-green-800 text-lg mb-2">Outstanding</h3>
            <p className="text-3xl font-bold text-green-600">17</p>
            <p className="text-sm text-green-700">32.1% of all subjects</p>
          </div>
          
          <div className="bg-blue-50 p-6 rounded-lg border-l-4 border-blue-400">
            <h3 className="font-bold text-blue-800 text-lg mb-2">Excellent</h3>
            <p className="text-3xl font-bold text-blue-600">20</p>
            <p className="text-sm text-blue-700">37.7% of all subjects</p>
          </div>
          
          <div className="bg-purple-50 p-6 rounded-lg border-l-4 border-purple-400">
            <h3 className="font-bold text-purple-800 text-lg mb-2">Very Good</h3>
            <p className="text-3xl font-bold text-purple-600">10</p>
            <p className="text-sm text-purple-700">18.9% of all subjects</p>
          </div>
          
          <div className="bg-red-50 p-6 rounded-lg border-l-4 border-red-400">
            <h3 className="font-bold text-red-800 text-lg mb-2">Needs Work</h3>
            <p className="text-3xl font-bold text-red-600">6</p>
            <p className="text-sm text-red-700">11.3% of all subjects</p>
          </div>
        </div>

        {/* Key Insights */}
        <div className="mt-8 bg-gray-50 p-6 rounded-lg">
          <h3 className="text-xl font-bold text-gray-800 mb-4">🎯 Key Insights</h3>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
              <h4 className="font-semibold text-green-800 mb-2">✅ Your Strengths:</h4>
              <ul className="text-sm text-gray-700 space-y-1">
                <li>• 13/14 Laboratory subjects are Outstanding</li>
                <li>• 2/2 Major Projects are Outstanding</li>
                <li>• 5/5 Humanities subjects are Excellent</li>
                <li>• 69.8% of grades are Excellent or above</li>
              </ul>
            </div>
            <div>
              <h4 className="font-semibold text-red-800 mb-2">⚠️ Areas to Focus:</h4>
              <ul className="text-sm text-gray-700 space-y-1">
                <li>• Mathematics: Only 2/4 subjects Excellent+</li>
                <li>• Core CS Theory: 5/12 subjects below Excellent</li>
                <li>• Electronics Theory: 1/3 subjects below Good</li>
                <li>• Discrete Mathematics: Your only C grade</li>
              </ul>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default InteractiveGradeCategorization;
